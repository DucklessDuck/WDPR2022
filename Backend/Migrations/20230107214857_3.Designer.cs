// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230107214857_3")]
    partial class _3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("BetrokkenPersoonVoorstelling", b =>
                {
                    b.Property<int>("CrewPersoonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoorstellingenVoorstellingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CrewPersoonId", "VoorstellingenVoorstellingId");

                    b.HasIndex("VoorstellingenVoorstellingId");

                    b.ToTable("BetrokkenPersoonVoorstelling");
                });

            modelBuilder.Entity("Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gebruikersnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wachtwoord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Models.BetrokkenPersoon", b =>
                {
                    b.Property<int>("PersoonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CrewLidPersoonId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Functie")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Zaalnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PersoonId");

                    b.HasIndex("CrewLidPersoonId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("Models.Kaart", b =>
                {
                    b.Property<string>("KaartId")
                        .HasColumnType("TEXT");

                    b.Property<int>("BezoekerAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Geboortedatum")
                        .HasColumnType("TEXT");

                    b.Property<double>("Prijs")
                        .HasColumnType("REAL");

                    b.Property<int>("StoelNummer")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VoorstellingId")
                        .HasColumnType("INTEGER");

                    b.HasKey("KaartId");

                    b.HasIndex("BezoekerAccountId");

                    b.HasIndex("VoorstellingId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Models.Stoel", b =>
                {
                    b.Property<int>("StoelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoelRanking")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Zaalnaam")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StoelID");

                    b.HasIndex("Zaalnaam");

                    b.ToTable("Stoelen");
                });

            modelBuilder.Entity("Models.Voorstelling", b =>
                {
                    b.Property<int>("VoorstellingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NaamVoorstelling")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VoorstellingsDatum")
                        .HasColumnType("TEXT");

                    b.HasKey("VoorstellingId");

                    b.ToTable("Voorstellingen");
                });

            modelBuilder.Entity("Models.Zaal", b =>
                {
                    b.Property<string>("Zaalnaam")
                        .HasColumnType("TEXT");

                    b.HasKey("Zaalnaam");

                    b.ToTable("Zalen");
                });

            modelBuilder.Entity("BetrokkenPersoonVoorstelling", b =>
                {
                    b.HasOne("Models.BetrokkenPersoon", null)
                        .WithMany()
                        .HasForeignKey("CrewPersoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Voorstelling", null)
                        .WithMany()
                        .HasForeignKey("VoorstellingenVoorstellingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.BetrokkenPersoon", b =>
                {
                    b.HasOne("Models.BetrokkenPersoon", "CrewLid")
                        .WithMany()
                        .HasForeignKey("CrewLidPersoonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CrewLid");
                });

            modelBuilder.Entity("Models.Kaart", b =>
                {
                    b.HasOne("Models.Account", "Bezoeker")
                        .WithMany("TicketLijst")
                        .HasForeignKey("BezoekerAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Voorstelling", "voorstelling")
                        .WithMany("Tickets")
                        .HasForeignKey("VoorstellingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bezoeker");

                    b.Navigation("voorstelling");
                });

            modelBuilder.Entity("Models.Stoel", b =>
                {
                    b.HasOne("Models.Zaal", "Zaal")
                        .WithMany("Stoelen")
                        .HasForeignKey("Zaalnaam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zaal");
                });

            modelBuilder.Entity("Models.Account", b =>
                {
                    b.Navigation("TicketLijst");
                });

            modelBuilder.Entity("Models.Voorstelling", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Models.Zaal", b =>
                {
                    b.Navigation("Stoelen");
                });
#pragma warning restore 612, 618
        }
    }
}
